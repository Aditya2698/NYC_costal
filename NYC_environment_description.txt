Here is the description of the modified NYC environment:

The primary contribution of the new study will be that it considers system effects by considering the boroughs of New York, modeling each as a component, considering system interactions to be based on real-life dependence/connection between the boroughs. 

Each sub-system/component will be defined by a wedge. The exact details describing the wedge (Cost, dimensions etc.) will be defined later. 

First we describe the state, action and reward formulation at the component level (section A below). We then describe the component details in Section B and finally describe the system effects in Section C which consideres system interection by modifying the corresponding flooding rewards.

A) Wedge component defination: State, action and reward for individual component:

Each component (wedge) will have 2 possible dynamic actions combinations and can be define by one of the following 4 enviroment defination:

   i) Two floodwall F1 and F2: This is the same as the original environment in single_wedge_2_dike_environment.py)
   ii) Green_space and floodwall F: The environment is defined in the MATLAB code Green_space_and_dike.m
   iii) Oyster reef and floodwall F: defined in Oyster_Reef_and_dike.m: The environment is defined in the MATLAB code Oyster_Reef_and_dike.m
   iv) Salt marsh and floodwall F: The environment is defined in the MATLAB code Salt_Marsh_and_dike.m

ii, iii, and iv are nature based solutions and the major difference with i is that we have a green_space, oyster reef, or salt marsh in the wedge in place of the lower floodwall F1.

Despite these differences, the cost calculations for each component/subsystem would involve the following cost components:

1. Cost of construction:
 - Costs for constructing floodwalls/nature based solutions 

2. Flood Damage Costs:
 - Depend on the flooded volume and vulnerability of the component.
 - C_f(s) = f_damage * V_zone * (V_flooded / V_zone), where f_damage is the flood vulnerability factor.
 - Based on the 2 actions, each component will have 4 system configuration/states (next_system). The corresponding flood damage cost need to be defined for each of the environment defination.

3. Maintenance Costs:
 - Annual costs for maintaining constructed flood protection assets.

4. Environmental cost of carbon:
 - Life-cycle greenhouse gas (GHG) emissions are translated into monetary costs using the Social Cost of Carbon (SCC).
 - GHG emissions are calculated for construction and maintenance costs
 - In case the component has green infrastructure, it will absorb the carbon released in the atmosphere based on its capacity. This will reduce the GHG emissions and the corresponding costs.	


As the first step, let's define the python code for the cost calculations for the 4 environment defination. 


--------------------------------

B) Component Details and Parameters:
--------------------------------

The NYC environment consists of 5 components representing different boroughs/regions:

1. Bronx (Component 1): Define using component defination i i.e. two floodwalls F1 and F2
   - Exposure value (e): 2.5 million $/m width
   - Slope (s): 0.00149231 
   - Vulnerability factor (f_damage): 0.17
   - Total flooding cost (cf = -f_damage * e): -425,000 $/m width
   - City height (h): 9.75 m
   - City depth (d): 6.5 km

2. Manhattan (Component 2): Define using component defination ii i.e. green_space and floodwall F with initial seawall height of 1.5 m
   - Exposure value (e): 15.3 million $/m width
   - Slope (s): 0.0085 
   - Vulnerability factor (f_damage): 0.07
   - Total flooding cost (cf = -f_damage * e): -1,071,000 $/m width
   - City height (h): 8.5 m
   - City depth (d): 1.0 km

3. Brooklyn (Component 3): Define using component defination i i.e. two floodwalls F1 and F2
   - Exposure value (e): 4.5 million $/m width
   - Slope (s): 0.00244643
   - Vulnerability factor (f_damage): 0.10
   - Total flooding cost (cf = -f_damage * e): -450,000 $/m width
   - City height (h): 13.7 m
   - City depth (d): 5.6 km

4. Queens (Component 4): Define using component defination iii i.e. oyster reef and floodwall F
   - Exposure value (e): 5.5 million $/m width
   - Slope (s): 0.00223729
   - Vulnerability factor (f_damage): 0.14
   - Total flooding cost (cf = -f_damage * e): -770,000 $/m width
   - City height (h): 19.8 m
   - City depth (d): 8.85 km

5. Staten Island (Component 5): Define using component defination iv i.e. salt marsh and floodwall F
   - Exposure value (e): 3.0 million $/m width
   - Slope (s): 0.001905
   - Vulnerability factor (f_damage): 0.16
   - Total flooding cost (cf = -f_damage * e): -480,000 $/m width
   - City height (h): 15.24 m
   - City depth (d): 8.0 km


--------------------------------
C) System effects and interactions
--------------------------------

The system interactions are implemented through a simple lateral flooding mechanism between adjacent components. Each component needs to know:
1. Its adjacent components that can affect it
2. The slope relationship with those components

Interaction Pairs (Higher slope → Lower slope):
1. Manhattan (0.0085) → Brooklyn (0.00244643)
2. Manhattan (0.0085) → Bronx (0.00149231)
3. Brooklyn (0.00244643) → Queens (0.00223729)
4. Brooklyn (0.00244643) → Bronx (0.00149231)
5. Brooklyn (0.00244643) → Staten Island (0.001905)

Critical Floodwall Definition:
- Two-floodwall environments (Bronx, Brooklyn): F2 is critical
- Nature-based solution environments (Manhattan, Queens, Staten Island): F is critical

Flooding Effect Rule:
If component A can affect component B (A has higher slope):
- When A's critical floodwall is NOT constructed:
  * B's flood damage is increased by i%
- When A's critical floodwall IS constructed:
  * No additional effect on B
- B's floodwall state never affects A

Implementation Requirements:
1. Each component needs:
   - List of components that can affect it (higher slope components)
   - Method to check if those components have their critical floodwall
   - Factor i to increase flood damage when affected

2. Cost Calculator Changes:
   - Add method to check critical floodwall status
   - Modify flood damage calculation to accept interaction effects
   - Apply i% increase when affected by higher slope components

3. System State Tracking:
   - Track floodwall construction status for each component
   - Share status with affected components for damage calculations


